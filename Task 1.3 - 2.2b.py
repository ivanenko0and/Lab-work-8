
# Алгоритм бінарного пошуку


def bin_search(s, x):  # s - задана послідовність, x - шукане значення

    s = list(s)
    s.sort()  # Задана послідовність s відсортовується

    # Виведення відсортованої послідовності s та значення шуканого елемента x:
    print("Відсортована задана послідовність: ", end="")
    for i in range(len(s)):
        if i == len(s) - 1:
            print(s[i])
        else:
            print(s[i], end=", ")
    print(f"Шуканий елемент: {x}")

    i = checks = 0  # checks - кількість перевірок
    j = len(s) - 1  # i та j - межі певної ділянки послідовності s, що отримують як початкові значення
# номери першого та останнього елементів послідовності string відповідно
    index = int((j + 1) / 2)  # index - номер шуканого значення, якому присвоюється номер центрального значення s

    while s[index] != x and i <= j:
        """ Якщо центральний елемент (з порядковим номером index) ділянки послідовності string 
        (в межах номерів елементів від i до j) не дорівнює element, то змінюються границі цієї ділянки:
        Якщо x більше за за елемент s з номером index, беруться всі елементи цієї ділянки справа від значення s[index].
        В іншому випадку - всі елементи зліва."""
        if x > s[index]:
            i = index + 1
        else:
            j = index - 1
        checks += 3  # З кожною перевіркою збільшується значення checks
        index = int((i + j) / 2)  # Знаходиться нове центральне значення для діланки в межах номерів елементів i та j
    checks += 2  # Збільшуємо значення checks, оскільки остання перевірка у циклі не зараховується

    if i > j:  # Якщо початкова границя ділянки (i) більша за кінцеву (j), то шуканий елемент не знайдено
        print("Елемент не знайдено.")
    else:  # В іншому випадку - елемент знайдено
        # При знаходженні елемента виводиться його порядковий номер у послідовності string та кількість перевірок:
        print(f"Елемент знайдено на позиції {index}.")
        print(f"Кількість виконаних порівнянь дорівнює {checks}.")


bin_search('Binary search algorithm', 'e')
"""
Елемент знайдено на позиції 7.
Кількість виконаних порівнянь дорівнює 5.
"""

print("───────────────────────────────")
bin_search([5, 7, 2, 7, 4, 6, 3, 5], 3)
"""
Елемент знайдено на позиції 1.
Кількість виконаних порівнянь дорівнює 2.
"""

print("───────────────────────────────")
bin_search(range(10, 30), 39)
"""
Елемент не знайдено.
"""

# Виконав Іваненко Андрій Вадимович
