
# Алгоритм прямого пошуку підрядка


answer = '1'
while answer == '1':

    string, substring = [], []  # string - задана послідовність, substring - шуканий підрядок

    print("Введіть послідовність (натисніть пробіл для припинення вводу):")
    while True:  # Введення значень n, які будуть додаватись до послідовності string як елементи:
        n = input()
        if n == " " or n == "":  # Якщо значення n є пропуском, то введення завершується
            break
        else:  # В іншому випадку значення n додається до послідовності string
            for i in n:  # Якщо n є послідовністю, то всі її елементи окремо додаються
                string.append(i)
            continue

    print("Введіть шуканий підрядок (натисніть пробіл для припинення вводу):")
    while True:  # Введення значень n, які будуть додаватись до послідовності substring як елементи:
        n = input()
        if n == " " or n == "":  # Якщо значення n є пропуском, то введення завершується
            break
        else:  # В іншому випадку значення n додається до послідовності substring
            for i in n:  # Якщо n є послідовністю, то всі її елементи окремо додаються
                substring.append(i)
            continue

    index = substring_index = checks = 0  # index - позиція шуканого підрядка
    # substring_index - номер елемента підрядка, checks - кількість перевірок
    string_length = len(string)  # string_length - довжина заданої послідовності string
    substring_length = len(substring)  # substring_length - довжина шуканого підрядка substring

    # Поелементна перевірка послідовності string на наявність першого елемента substring:
    while index <= string_length - substring_length and substring_index < substring_length:
        # Якщо є збіг відбувається перевірка наступних елементів послідовностей
        if string[index + substring_index] == substring[substring_index]:
            substring_index += 1
        else:  # В іншому випадку алгоритм переходить на наступний елемент і перевірка відбувається з початку
            index += 1
            substring_index = 0
        checks += 3  # З кожною перевіркою збільшується значення checks
        """ 
        Перевірка продовжується доки index є меншим за різницю довжин двох послідовностей. Тобто, якщо після декількох
        перевірок послідовності string залишається кількість елементів, що менша за довжину підрядка substring, 
        то перевірка завершується.
        
        Якщо довжина шуканого підрядка substring_length дорівнює значенню substring_index, що визначає
        кількість збіжних елементів у послідовностях, то підрядок знайдено і перевірка завершується. Якщо після повної 
        перевірки послідовності string значення substring_index менше за substring_length, то підрядок не знайдено.
        """
    checks += 2  # Збільшуємо значення checks, оскільки остання перевірка у циклі не зараховується

    # При знаходженні substring виводиться номер його позиції у послідовності string та кількість перевірок:
    if substring_index == substring_length:
        print(f"Підрядок знайдено на позиції {index}.")
        print(f"Кількість виконаних порівнянь дорівнює {checks}.")
    else:
        print("Підрядок не знайдено.")

    answer = input("Введіть '1' для повторення:")

# Виконав Іваненко Андрій Вадимович
