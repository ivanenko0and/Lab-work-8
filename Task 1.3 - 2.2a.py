# Алгоритм бінарного пошуку


answer = '1'
while answer == '1':

    string, element = [], 0  # string - задана послідовність, element - шукане значення

    print("Введіть послідовність (натисніть пробіл для припинення вводу):")
    while True:  # Введення значень n, які будуть додаватись до послідовності string як елементи:
        n = input()
        if n == " " or n == "":  # Якщо значення n є пропуском, то введення завершується
            break
        else:  # В іншому випадку значення n додається до послідовності string
            for i in n:  # Якщо n є послідовністю, то всі її елементи окремо додаються
                string.append(i)
            continue

    print("Введіть шуканий елемент:")
    while True:  # Введення значення element:
        element = input()
        if len(element) > 1:  # Якщо значення element є послідовністю, то введення повторюється
            print("Введіть одиничне значення!")
        else:
            break

    string.sort()  # Задана послідовність string відсортовується
    print("Відсортована задана послідовність: ", end="")
    for i in range(len(string)):  # Виведення відсортованої послідовності:
        if i == len(string) - 1:
            print(string[i])
        else:
            print(string[i], end=", ")

    i = checks = 0  # checks - кількість перевірок
    j = len(string) - 1  # i та j - межі певної ділянки послідовності string, що отримують як початкові значення
# номери першого та останнього елементів послідовності string відповідно
    index = int((j + 1) / 2)  # index - номер шуканого значення, якому присвоюється номер центрального значення string

    while string[index] != element and i <= j:
        """ Якщо центральний елемент (з порядковим номером index) ділянки послідовності string 
        (в межах номерів елементів від i до j) не дорівнює element, то змінюються границі цієї ділянки:
        Якщо element більше за елемент string з номером index, беруться всі елементи цієї ділянки справа від значення 
        string[index]. В іншому випадку - всі елементи зліва."""
        if element > string[index]:
            i = index + 1
        else:
            j = index - 1
        checks += 3  # З кожною перевіркою збільшується значення checks
        index = int((i + j) / 2)  # Знаходиться нове центральне значення для діланки в межах номерів елементів i та j
    checks += 2  # Збільшуємо значення checks, оскільки остання перевірка у циклі не зараховується

    if i > j:  # Якщо початкова границя ділянки (i) більша за кінцеву (j), то шуканий елемент не знайдено
        print("Елемент не знайдено.")
    else:  # В іншому випадку - елемент знайдено
        # При знаходженні елемента виводиться його порядковий номер у послідовності string та кількість перевірок:
        print(f"Елемент знайдено на позиції {index}.")
        print(f"Кількість виконаних порівнянь дорівнює {checks}.")

    answer = input("Введіть '1' для повторення:")

# Виконав Іваненко Андрій Вадимович
